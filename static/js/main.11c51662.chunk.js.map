{"version":3,"sources":["component/Profile.js","component/Tentang.js","component/Foto.js","App.js","serviceWorker.js","index.js"],"names":["Profile","Jumbotron","fluid","Container","Row","Col","xs","md","Image","src","className","thumbnail","Tentang","clasName","Foto","pageFoto","App","Navbar","bg","Toggle","Nav","Link","path","exact","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"oVAwBeA,MAtBf,WACQ,OACI,6BAEI,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACZ,kBAACC,EAAA,EAAD,CAAOC,IAAI,qBAAqBC,UAAU,cAAcC,WAAS,IACjE,+BAGJ,wBAAID,UAAU,eAAd,gBACA,uBAAGA,UAAU,oBAAb,wC,MCaLE,MAxBf,WACI,OACI,6BACI,kBAACT,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,wBAAIK,UAAU,uBAAd,gBACA,6BACA,8BAEJ,kBAACN,EAAA,EAAD,CAAKM,UAAU,eACX,kBAACL,EAAA,EAAD,KACK,uBAAGQ,SAAS,QAAZ,cAA8B,8DAA9B,gHAAsL,uCAAtL,4CAEL,kBAACR,EAAA,EAAD,KACI,wOCTbS,MARf,WACI,OACI,6BACI,uCCIZ,SAASC,IACP,OAAO,kBAAC,EAAD,MA6BMC,MA1Bf,WACE,OACE,kBAAC,IAAD,KACA,6BACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,SACP,kBAACD,EAAA,EAAOE,OAAR,MACE,kBAAChB,EAAA,EAAD,KACI,kBAACiB,EAAA,EAAD,CAAKV,UAAU,WACX,kBAACU,EAAA,EAAIC,KAAL,kBAGR,8BACI,kBAAC,IAAD,CAAOC,KAAK,QAAQC,OAAK,EAACC,UAAWT,MAK/C,kBAAC,EAAD,MAGA,kBAAC,EAAD,SCrBAU,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,M,MCzFjEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDWnB,SAAkBtB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIsB,IAAIC,qBAAwB9B,OAAOC,SAAS8B,MACpDC,SAAWhC,OAAOC,SAAS+B,OAIvC,OAGFhC,OAAOiC,iBAAiB,QAAQ,WAC9B,IAAM5B,EAAK,UAAMyB,qBAAN,sBAEPhC,IAgEV,SAAiCO,EAAOC,GAEtC4B,MAAM7B,EAAO,CACX8B,QAAS,CAAE,iBAAkB,YAE5BzB,MAAK,SAAA0B,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CjC,UAAUC,cAAciC,MAAM/B,MAAK,SAAAC,GACjCA,EAAa+B,aAAahC,MAAK,WAC7BV,OAAOC,SAAS0C,eAKpBvC,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAyB,CAAwBvC,EAAOC,GAI/BC,UAAUC,cAAciC,MAAM/B,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OCjC/BE,K","file":"static/js/main.11c51662.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Jumbotron, Container, Row, Col, Image } from 'react-bootstrap';\r\nfunction Profile(){\r\n        return(\r\n            <div>\r\n                {/* Jumbotron */}\r\n                <Jumbotron fluid>\r\n                    <Container>\r\n                    <Row>\r\n                    <Col xs={6} md={4}>\r\n                        <Image src=\"images/profile.jpg\" className=\"profile__me\" thumbnail/>\r\n                        <br />\r\n                    </Col>\r\n                    </Row>\r\n                    <h1 className=\"text-center\">Ustami Razib</h1>\r\n                    <p className=\"lead text-center\">\r\n                        Mahasiswa | Javascript | Editing\r\n                    </p>\r\n                    </Container> \r\n                </Jumbotron>\r\n            </div>\r\n        )\r\n\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport './css/Tentang.css';\r\n\r\nfunction Tentang(){\r\n    return(\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <h3 className=\"text-center tentang\">Tentang Saya</h3>                         \r\n                        <hr />\r\n                        <br />\r\n                    </Col>\r\n                    <Row className=\"text-center\">\r\n                        <Col>\r\n                             <p clasName=\"lead\">Saya Lahir <strong>Bandung, 14 September 2002</strong> seorang mahasiswa di sekolah Guna Dharma Nusantara dan saya mengambil jurusan, Teknik Komputer dan jaringan <strong>TKJ</strong> dan ini adalah website profile saya :)</p>\r\n                        </Col>\r\n                        <Col>\r\n                            <p>profile ini saya buat karena ke-gabutan saya ketika lockdown dirumah karena sedang terjadi nya wabah virus corona / covid19, Dari pada gabut mending saya membuat profile website sekalian belajar.</p>\r\n                        </Col>\r\n                    </Row>\r\n                \r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\nexport default Tentang;","import React from 'react';\r\n\r\nfunction Foto() {\r\n    return (\r\n        <div>\r\n            <h1>Hello</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Foto;","import React from 'react';\nimport './App.css';\nimport { Navbar, Nav, Container, Row, Col } from 'react-bootstrap';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport Profile from './component/Profile';\nimport Tentang from './component/Tentang';\nimport Foto from './component/Foto';\n\n\nfunction pageFoto(){\n  return <Foto />\n}\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div>\n      <Navbar bg=\"light\">\n          <Navbar.Toggle />\n            <Container>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link>PROFILE</Nav.Link>\n                </Nav>\n              </Container>\n            <main>\n                <Route path=\"/foto\" exact component={pageFoto} />\n            </main>\n      </Navbar>\n\n      {/* Jumbotron || Profile  */}\n      <Profile />\n      \n      {/*  Tentang Saya  */}\n      <Tentang />\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}